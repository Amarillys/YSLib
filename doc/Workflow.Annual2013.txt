/*
	Copyright by FrankHB 2013.

	This file is part of the YSLib project, and may only be used,
	modified, and distributed under the terms of the YSLib project
	license, LICENSE.TXT.  By continuing to use, modify, or distribute
	this file you indicate that you have read the license and
	understand and accept it fully.
*/

/*!	\file Workflow.Annual2013.txt
\ingroup Documentation
\brief 工作流汇总报告 - 2013 年度。
\version r145
\author FrankHB <frankhb1989@gmail.com>
\since build 433
\par 创建时间:
	2013-07-31 01:27:41 +0800
\par 修改时间:
	2013-07-31 01:35 +0800
\par 文本编码:
	UTF-8
\par 模块名称:
	Documentation::Workflow::Annual2013
*/

// See "Meta.cpp" for meta discriptions.

$import $WORKFLOW;
$LINE-WIDTH-RESTRICT 0;

$WORKFLOW:
// Following lines are only for logging informal project information.
// See Meta.txt for formal project information.
// See ChangeLog.*.txt for accepted contents.

$2013-04:
report.anylatical:
Primative image formats should be supported: bmp, jpg, png.
Use non-GPL for license of FreeImage.

workflow.dev-dep:
For UI:
	(literal semantics, function mapping) -> NPL evaluator,
	UI layout manager -> UI designer,
	(concreate UI sessions, UI session manager) -> UI session shells,
	device abstraction -> platform surfaces,
	(YEGE, graphical layer adaptors) -> YSLib graphical APIs;

note.visual-stack:
Reconstruction of visual stack design should be considerable.
	currently: host screen/desktop layer - hosted window - YSLib screen device with back buffer/platform surface - Desktop;
	future: all layers handled via %IWidget derived class components;

todo.designated:
/ device-reqirement-analysis;
/ image-reqirement-analysis, round 2;

$2013-05:
report.impl:
See $known_issue_b406 @ Meta.txt.

dep.merge:
Microlua(github://microlua/MicroLua-Source) @ DS: considerable, shelved.
uLibrary @ DS: rejected. Quality questionable, not suitible for scope.
	From http://devkitpro.org/viewtopic.php?f=2&t=3192, WinterMute: "Please don't use uLibrary either, it's awful and you won't get support for it here either."

note.req-env:
WG21/N3476 is confirmend to be not needed currently.

$2013-06:
report.impl:
Resolved bug $known_issue_b223.

todo.ceased:
Base class 'noinstance' is not necessary. Use abstract class to stop create an object of a class.

todo.deferred:
$done.finished Updating dependencies of FreeImage.
	// To make binary change small.

note.design:
UI input/output events should be asymmetry, that is, input events are far more variant than output events. The reasons are:
	1. There are more unpredictable choices from user input than program output by the designer.
	2. The output is usually generated by few kinds of devices(video and audio), but the input is often from a lot more devices with different types and behavior.
	3. Though the input from variant devices can be multiplexed, they are almost always demultiplexed by the client, if used. No need to twist them together for both input and output events.

$2013-07:
dep.impl:
FreeType:
	Modules configuration:
	'HINTING_MODULES += autofit' is to be removed for no necessity of hinting and binary size.
	'AUX_MODULES += cache' is to be removed because only the header is used currently.
	Redundant, unused and invalid(dependency not satisfied) 'BASE_EXTENSIONS += ftfstype.c' is to be removed.
	'BASE_EXTENSIONS += ftstroke.c' is to be removed because currently not needed.
	'BASE_EXTENSIONS += ftsynth.c' is to be removed because this is the alpha interface(see the source) , and should be considered depolyed in client code.

report.impl:
See $known_issue_b406 @ Meta.txt.
	Hotspot history in freetype2 repository: tt_face_get_metrics @ ttmtx.c:f5aa47b, tt_face_get_metrics @ ttgload.c:8744edf, TT_Get_Metrics @ ttgload.c:3ab770b.
There is no necessity for attatched events implemented as routed events like WPF built in GUI state of YSLib, because:
	1. Basically routed events fit view trees well.
	2. No no other trees used as part constructs for further UI modeling which have extra routes.
Though event forwarding with distinct source switched or attatched can be reasonable.
New UI event CursorOver and CursorWheel supported. Though no need for devices without mouse like DS, it is a plus to allow users raise such events.
Some bugs of screen coordinate conversion for MinGW32 fixed.
Wheel event issues:
	Scroll bars and listboxes now support CursorWheel event. More should be investigated.
	Now wheel event is available in the area of independent focus. Extended wheel event can be supported when cursor out of area of current widget(independent focus) like QQ2013 UI, but is depend on users.
Using seperated 'Fetch*' function to get static objects for:
	1. Runtime dependency can be decreased. If font cache is not needed, font directory is also not needed to be specified.
	2. It is good for statically-linked programs without need for initialization of all these objects. Binary image size can be decreased through link-time optimization if the unrelated interface is unused totally.
Some interfaces of 'Helper' are moved to 'YSLib'. Some(like 'FPSCounter') are still immature.
Win32 hosted Window enumeration:
	::EnumWindows and ::EnumChildWindows can not keep iteration state, so use ::GetWindow instead.
	Results of enueration the desktop are often too large for usual application.
G++ 4.8.1 wrongly accepted reopened namespace from non-line to inline. See http://gcc.gnu.org/bugzilla/show_bug.cgi?id=53402 .
For loading image from file system using FreeImage:
	Non-ANSI file name for extension detection(i.e. for ::FreeImage_GetFIFFromFilename) is OK, because the extensions recognized are all ASCII representable.
	Unicode version of functions are invalid for non-Win32 platforms, so just do not use them.
	Do not use ::FreeImage_Load if the encoding of file name used by ::fopen is not specified.
For %::NTSTATUS error 'STATUS_CONTROL_C_EXIT'(0xC000013A) on Windows, it is expected when console window closed or Ctrl+C pressed.
Now focus would not be automatically released on widget destruction, allowing unspecified order of widget destruction being safly with no-op.
Mutal exclusion locking overhead is significant(about 5x lag) in current implementation on MinGW32 for both 'YCLib' input and 'Helper' rendering.
	Actually both cases cause lag similarly when in-thread message loop delay (currently in shell input handler) is removed:
		1. About 55~80 kHz(faked as kFPS) can be achieved after removal the loop delay (but ususlly lower than 70 kHz), and about 480~560 kHz after removal of locking for both cases. Only 170~240 kHz can be achieved after removal of input locking.
		2. In July, 2012 it could be at a peak of greater than 730 kHz. It is believed that the improvement of functionality has effect on this, though still not clear which part cause the overhead.
		3. Intel VTune Amplifier XE 2013 detects seconds of spin time before the removal of locking (for an about 10 second run) and almost none (0.010s) after the removal. The use of hardware concurrency is "idle" before and "poor" after.
	No simple way to improve:
		1. No lock-free swap primative supported by std::atomic directly because almost no hardware support: http://stackoverflow.com/questions/15460829/lock-free-swap-of-two-unique-ptrt .
		2. Not only pointers themselves, content pointed should be thread-safe.
		3. Fine-grained thread-safe access should be remained anyway.
		4. If code in contexts like 'InputManager' uses coarse-grained concurrency, user should be cautious for synchronization. It is error-prone (even if easy).

todo.deferred:
Handling FreeType error 0x26: "no charmap" and 0x40: "out of memory"(descriptions from "fterrdef.h").
Ability for selecting specific typefaces with such glyphs.
Native exceptions should be caught at proper boundary.

note.merge:
(FTGL, GLFW, FMOD) @ !DS: considerable, shelved.
Cairo: rejected.
	Reason from http://people.mozilla.com/~roc/Samsung/Mozilla2DGraphics.pdf .

////

